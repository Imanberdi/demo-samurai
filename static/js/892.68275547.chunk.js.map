{"version":3,"file":"static/js/892.68275547.chunk.js","mappings":"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","sources":["components/profile/myPosts/Post/Post.jsx","components/profile/myPosts/MyPosts.jsx","components/profile/ProfileInfo/ProfileStatus.jsx","components/profile/ProfileInfo/ProfilInfo.jsx","components/profile/Profile.jsx"],"sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div>\r\n      <Item>\r\n        <img\r\n          src=\"https://storage.ws.pho.to/s2/9bfeebd64763112e93cbe439e88c3715f0e54104_m.jpg\"\r\n          alt=\"\"\r\n        />\r\n        {props.message}\r\n        <div><span>like</span>{props.likesCount} </div>\r\n      </Item>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n\r\nconst Item = styled.div`\r\n  &:last-child {\r\n    color: #000;\r\n  }\r\n  & > img {\r\n    width: 30px;\r\n    border-radius: 30px;\r\n  }\r\n`;\r\n","import React, { useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Post from \"./Post/Post\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { addPost } from \"../../../features/profile/profileSlice\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { SpanError } from \"../../login/Login\";\r\n\r\nconst MyPosts = (props) => {\r\n  const dispatch = useDispatch();\r\n  const state = useSelector((state) => state.profilePage);\r\n  const posts = state.posts;\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    reset,\r\n    formState: { errors, isValid },\r\n  } = useForm({ mode: \"onBlur\" });\r\n\r\n  const checkKeyDown = (e) => {\r\n    // if (e.key === \"Enter\") onSubmit();\r\n  };\r\n\r\n  const onAddPost = (data) => {\r\n    dispatch(addPost(data.addPost));\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <PostsBlock>\r\n      my posts\r\n      <div>\r\n        <form onSubmit={handleSubmit(onAddPost)}>\r\n          <textarea\r\n            {...register(\"addPost\", { required: \"This filed is required\" })}\r\n            placeholder=\"Enter your post\"\r\n            onKeyDown={(e) => checkKeyDown(e)}\r\n          ></textarea>\r\n          {errors.addPost && <SpanError>{errors.addPost.message}</SpanError>}\r\n          <div>\r\n            <button type=\"submit\" disabled={!isValid}>\r\n              Add post\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      <Posts>\r\n        {posts.map((m) => (\r\n          <Post\r\n            key={m.id}\r\n            id={m.id}\r\n            message={m.message}\r\n            likesCount={m.likesCount}\r\n          />\r\n        ))}\r\n\r\n        <Post />\r\n      </Posts>\r\n    </PostsBlock>\r\n  );\r\n};\r\n\r\nexport default MyPosts;\r\n\r\nconst PostsBlock = styled.div`\r\n  padding: 10px;\r\n`;\r\n\r\nconst Posts = styled.div`\r\n  margin-top: 10px;\r\n`;\r\n","import React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  getStatus,\r\n  updateStatus,\r\n} from \"../../../features/profile/profileSlice\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nconst ProfileStatus = (props) => {\r\n  const { register, handleSubmit } = useForm();\r\n  const statusProfile = useSelector((state) => state.profilePage.status);\r\n  const dispatch = useDispatch();\r\n  let [editMode, setEditMode] = useState(false);\r\n  let userId = props.userId;\r\n\r\n  useEffect(() => {\r\n    dispatch(getStatus(userId));\r\n  }, []);\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true)\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    dispatch(updateStatus(data.status));\r\n    setEditMode(false);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      {!editMode ? (\r\n        <div>\r\n          <span onClick={activateEditMode}>{statusProfile}</span>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <input\r\n            {...register(\"status\")}\r\n            defaultValue={statusProfile}\r\n            autoFocus\r\n          />\r\n        </div>\r\n      )}\r\n      <input type=\"submit\" />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ProfileStatus;\r\n","import styled from \"styled-components\";\r\nimport { Preloader } from \"../../common/Preloader\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\n\r\nconst ProfilInfo = (props) => {\r\n  const profile = useSelector((state) => state.profilePage.profile);\r\n\r\n  if (!profile) {\r\n    return <Preloader />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <div>\r\n          <ProfileImg\r\n            src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQE9eOu1gua3oss0b6xGmaUEvMu3boiiooinQ&usqp=CAU\"\r\n            alt=\"\"\r\n          />\r\n        </div>\r\n        <DescriptionBlock>avatart description</DescriptionBlock>\r\n        <ProfileStatus userId={props.userId}/>\r\n        <div>\r\n          <h2>{profile.fullName}</h2>\r\n          <img src={profile.photos.large} alt=\"\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfilInfo;\r\n\r\nconst ProfileImg = styled.img``;\r\n\r\nconst DescriptionBlock = styled.div`\r\n  padding: 10px;\r\n`;\r\n","import MyPosts from \"./myPosts/MyPosts\";\r\nimport ProfilInfo from \"./ProfileInfo/ProfilInfo\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Navigate, useParams } from \"react-router-dom\";\r\nimport { getUserProfile } from \"../../features/profile/profileSlice\";\r\n\r\nconst Profile = (props) => {\r\n  const isAuth = useSelector((state) => state.auth.isAuth);\r\n  const authUserId = useSelector((state) => state.auth.id);\r\n  console.log(authUserId);\r\n  const dispatch = useDispatch();\r\n  let { userId } = useParams();\r\n  if (!userId) {\r\n    userId = authUserId;\r\n  }\r\n  if (userId) {\r\n    useEffect(() => {\r\n      dispatch(getUserProfile(userId));\r\n    }, [userId]);\r\n  }\r\n\r\n  if (!isAuth) return <Navigate to={\"/login\"} replace />;\r\n  return (\r\n    <div>\r\n      <ProfilInfo userId={userId} />\r\n      <MyPosts />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n"],"names":["props","Item","src","alt","message","likesCount","styled","dispatch","useDispatch","posts","useSelector","state","profilePage","useForm","mode","register","handleSubmit","reset","formState","errors","isValid","PostsBlock","onSubmit","data","addPost","required","placeholder","onKeyDown","e","type","disabled","Posts","map","m","id","statusProfile","status","useState","editMode","setEditMode","userId","useEffect","getStatus","updateStatus","defaultValue","autoFocus","onClick","profile","ProfileImg","DescriptionBlock","fullName","photos","large","Preloader","isAuth","auth","authUserId","console","log","useParams","getUserProfile","to","replace"],"sourceRoot":""}